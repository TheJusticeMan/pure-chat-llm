{
	"version": "1.3.10",
	"readme": "# Pure Chat LLM\n\n**Pure Chat LLM** leverages Obsidian notes to provide a graphical user interface (GUI) for ChatGPT directly within your vault. This plugin transforms your notes into interactive chat windows, enabling seamless conversations, brainstorming, questions, and prompt generation — all without leaving Obsidian.\n\n---\n\n## Features\n\n- **Interactive chat interface:** Engage in seamless conversations with ChatGPT and other leading AI models directly from any Obsidian note. Edit your questions or responses and continue the chat without leaving your vault.\n- **Multiple AI providers:** Choose from a wide range of supported model providers, including OpenAI, Gemini, xAI, Anthropic, Cohere, Mistral AI, and DeepSeek. Easily switch between providers and models to suit your needs.\n- **Note linking for context:** Use `[[Note name]]` or Markdown links to include the content of other notes in your chat, providing additional context or structuring complex prompts. (Referenced notes must start at the beginning of a line.)\n- **Per-note customization:** Configure API parameters (such as `model`, `max_completion_tokens`, and more) on a per-note basis using a JSON block at the top of your note.\n- **Flexible system prompts:** Modify system prompts within your notes to influence the AI’s behavior for each conversation.\n- **Chat-linked notes:** Link specific notes to individual chat sessions for organized, context-rich discussions.\n- **Markdown rendering:** All chat responses support full Markdown formatting, including lists, code blocks, and more.\n- **Simple setup:** Just add your API key for your chosen provider in the plugin settings to get started.\n\n> [!IMPORTANT] > **Note:** This plugin is _not_ an AI note editor. It is designed solely for chatting with AI models through notes. It does not edit or manage your notes beyond the chat interface—it simply turns notes into GUI elements for AI chat.\n\n---\n\n## How to Use\n\n1. Create a new note in Obsidian.\n2. Write your question, prompt, or message.\n3. To initiate chat, press **Shift + Enter** or use the **Complete chat response** command.\n4. Your note will transform into a chat interface, allowing you to continue the conversation.\n5. To customize API parameters, add a JSON block at the top of your note, specifying options like:\n   - `model` (e.g., `\"gpt-4.1-nano\"`)\n   - `max_completion_tokens`\n   - `stream`\n   - Other API options (see [OpenAI API documentation](https://platform.openai.com/docs/api-reference/create))\n6. To include content from other notes, use `[[Note name]]` within your note. This will insert the entire content of that note at the position, which can be used as part of your message or role, helping you structure complex prompts or context.\n\n---\n\n## Example Chat\n\n> [!NOTE]\n> To include the content from another note, use the following JSON configuration:\n>\n> ```json\n> {\n>   \"model\": \"gpt-4.1-nano\",\n>   \"max_completion_tokens\": 4096,\n>   \"stream\": true\n> }\n> ```\n>\n> Then, start your message with:\n>\n> ```markdown\n> # role: system\n>\n> You are a helpful assistant.\n>\n> # role: user\n>\n> [[Introduction]]\n>\n> # role: assistant\n>\n> Hello! How can I assist you today?\n> ```\n>\n> _(In this example, the content of the note named \"Introduction\" will be included in the message.)_\n>\n> **Note:** The note you reference must start at the beginning of a line in your markdown for this feature to work correctly.\n\n---\n\n## Installation\n\n1. Open **Settings** -> **Community Plugins**\n2. Turn off **Safe Mode**\n3. Click **Browse** and search for **Pure Chat LLM**\n4. Click **Install** and then **Enable**\n5. (Optional) Configure plugin settings as desired\n\n---\n\n## Setting Your API key\n\nBefore using the **Pure Chat LLM** plugin, you must enter your OpenAI API key:\n\n- Navigate to **Settings** -> **Community Plugins** -> **Pure Chat LLM**\n- Find the **API key** field\n- Enter your OpenAI API key (you can generate one from the [OpenAI API keys page](https://platform.openai.com/account/api-keys))\n- Save your settings\n\n_Note:_ The API key must be set before initiating chats. If you use the **Complete chat response** command without a configured API key, the plugin will prompt you to enter it.\n\n---\n\n## Usage Reminder\n\n- When you first try to run **Complete chat response** or start a new chat, if the API key isn't configured, you'll be prompted to enter it.\n- After entering your API key, it will be saved for future sessions. You won't need to re-enter it unless you change it.\n\n---\n\n## Useful Links\n\n- [OpenAI API documentation](https://platform.openai.com/docs)\n- [API authentication](https://platform.openai.com/docs/api-reference/authentication)\n- [Chat API reference](https://platform.openai.com/docs/api-reference/chat)\n- [Responses & parameters](https://platform.openai.com/docs/api-reference/responses/create)\n",
	"EmptyApiKey": "sk-XXXXXXXXX",
	"alloptions": {
		"model": "gpt-4o",
		"stream": false,
		"max_completion_tokens": 100,
		"temperature": 1,
		"top_p": 1,
		"n": 1,
		"stop": null,
		"logit_bias": null,
		"metadata": {},
		"modalities": [
			"text"
		],
		"tool_choice": "none",
		"tools": [],
		"web_search_options": {},
		"user": "user-1234"
	},
	"selectionTemplates": {
		"Add emojis": "Add relevant emojis to enhance the provided selection. Follow these rules:\n1. Insert emojis at natural breaks in the text\n2. Never place two emojis next to each other\n3. Keep all original text unchanged\n4. Choose emojis that match the context and tone\nReturn only the emojified selection.",
		"Clarify & expand instructions": "The provided selection contains instructions that need to be expanded and clarified.\nExpand the instructions inside the <Selection> tags so that someone new to the task fully understands what needs to be done.\nUse clear, detailed explanations, examples if necessary, and break down any complex points into simpler parts.\nEnsure the expanded instructions maintain the original meaning and provide a comprehensive understanding. \nReturn only the expanded <Selection>.",
		"Clarify & expand role description": "The provided selection contains a brief role description enclosed within <Selection> tags.\n\nExpand and clarify this role description by thoroughly explaining:\n- The responsibilities associated with this role.\n- The goals or objectives the role aims to achieve.\n- The perspective or attitude someone in this role should adopt.\n\nUse detailed, precise language, and include relevant context or examples where appropriate.\n\nKeep the original intent intact while providing a comprehensive, easy-to-understand explanation.\n\nReturn only the **expanded** role description within the <Selection> tags, with no additional text or comments.",
		"Concentrate": "Reduce the provided selection to half its length while preserving the following elements:\n1. Main ideas and key points\n2. Essential details\n3. Original tone and style\nReturn only the shortened selection.",
		"Concentrate into a paragraph": "Concentrate the provided selection into a single paragraph while preserving the main ideas and key points. Remove any unnecessary details or repetition, and ensure the paragraph flows logically. Maintain the original tone and style. Return only the condensed paragraph.",
		"Correct grammar & spelling": "Fix the grammar and spelling of the provided selection. Preserve all formatting, line breaks, and special characters. Do not add or remove any content. Return only the corrected text.",
		"Expand": "Expand the provided selection to twice its length by:\n1. Adding relevant details and examples\n2. Elaborating on key points\n3. Maintaining the original tone and style\nReturn only the expanded selection.",
		"Simplify": "Simplify the provided selection to a 6th-grade reading level (ages 11-12).\nUse simple sentences, common words, and clear explanations.\nMaintain the original key concepts.\nReturn only the simplified selection.",
		"Summarize": "Create a bullet-point summary of the provided selection.\nEach bullet point should capture a key point.\nReturn only the bullet-point summary.",
		"Translate to english": "Translate the provided selection into English. Ensure the translation is accurate and maintains the original meaning, tone, and context. Return only the translated text."
	},
	"chatTemplates": {
		"Analizer 2.0": "Analyze the provided conversation log to understand the interaction between the `user`, the `assistant`, and the `system`.\n\n**Understanding the Roles:**\n\n*   **`user`**: This role represents the end-user who is interacting with the AI. Their messages are the direct prompts and questions.\n*   **`assistant`**: This role represents the AI model's responses. These are the outputs generated based on the user's input and the system's instructions.\n*   **`system`**: This role encapsulates the underlying instructions or guidelines given to the AI model. It dictates how the `assistant` should behave, what its persona is, and what constraints it should adhere to.\n\n**Key Instruction:**\n\nThe section marked with `# role: system` is the *system prompt*. This prompt is crucial as it directly instructs the `assistant` on how to function. Think of it as the AI's core programming or its \"job description.\"\n\n**Your Tasks:**\n\n1.  **Write a Better System Prompt:**\n    *   **Objective:** Based on the overall pattern of user requests and the assistant's responses observed in the conversation, identify the *intended* purpose or goal of the AI.\n    *   **Action:** Create a new, more effective `system` prompt that better guides the `assistant` to fulfill this identified purpose.\n    *   **Considerations:**\n        *   What kind of information was the user consistently trying to elicit?\n        *   What was the desired output format or style?\n        *   Were there any implicit instructions or expectations from the user's side?\n        *   The new prompt should be clear, concise, and actionable for the AI.\n    *   **Example:** If the user was repeatedly asking for summaries of complex topics in simple terms, a good system prompt might be: \"You are a helpful AI assistant that excels at simplifying complex information. Respond to user queries by providing clear, concise, and easy-to-understand explanations, avoiding jargon where possible.\"\n\n2.  **Condense User Requests into a Single Prompt:**\n    *   **Objective:** Imagine you need to achieve the *final* desired outcome from the `assistant` using only *one* single message from the `user`.\n    *   **Action:** Review all the individual requests made by the `user` throughout the conversation. Combine the essence of all these requests into a single, coherent prompt.\n    *   **Considerations:**\n        *   What is the ultimate goal the user was trying to reach across all their messages?\n        *   Can you frame this ultimate goal as a single, comprehensive request?\n        *   Ensure the condensed prompt captures all the necessary information and constraints implied by the previous user messages.\n    *   **Example:** If a user first asked for data on topic A, then asked to analyze it, and finally asked for a summary in bullet points, a condensed prompt could be: \"Provide data on topic A, analyze it, and present the key findings in bullet points.\"\n\nBy completing these tasks, you will demonstrate a deep understanding of how to analyze AI conversations and how to craft effective prompts for AI behavior and output.",
		"Conversation analizer": "Analyze the conversation.\n\nThe role's are the `user` chatting with the `assistant` on the `system`.\n- The roles include the `user`, the `assistant`, and the `system` (instructions).\nThe `# role: system` is the instructions to the `system`. In other words it's the system prompt.\n\nWrite a better system prompt based on what the user was trying to use the system for.\n\nWrite another prompt by condensing all the user requests into one to get the final assistant response with just one user message.",
		"Conversation titler": "Generate a concise and engaging title for the provided conversation, focusing on its main themes, key interactions between the user and assistant, and overall tone. Follow these rules:\n\n1. Keep the title 6-12 words long to balance brevity and detail.\n2. Use title case (capitalize the first letter of major words).\n3. Ensure the title is relevant, appealing, and based solely on the conversation's content.\n4. Avoid introducing new information not present in the conversation.\n\nReturn only the generated title.",
		"Predict next message": "Predict what the user will say next based on the conversation so far.\n\nUse the following rules:\n1. Do not include any system instructions or context.\n2. Focus solely on the user's likely next message.\n3. Keep it concise and relevant to the ongoing conversation.\n\nReturn only the predicted user message.",
		"Title": "Generate a concise and engaging title for the provided conversation based on its main ideas, key points, and overall theme. Follow these rules:\n1. Ensure the title is 5-10 words long to keep it brief yet descriptive.\n2. Use title case (capitalize the first letter of major words).\n3. Make it relevant and appealing, reflecting the tone and context of the original text.\n4. Avoid adding new information not present in the selection.\nReturn only the generated title.",
		"Upgrade system prompt": "Analyze the provided conversation log. Your task is to identify the core purpose and implicit instructions guiding the `assistant`'s behavior. Based on this analysis, rewrite the `system` prompt to be more explicit, comprehensive, and effective in directing the `assistant` to achieve the observed or intended goals.\n\n**Considerations for the new System Prompt:**\n\n*   **Clarity:** Ensure the prompt clearly defines the `assistant`'s role, persona, and capabilities.\n*   **Completeness:** Incorporate any implicit expectations or constraints observed in the conversation.\n*   **Effectiveness:** The new prompt should better equip the `assistant` to handle similar user requests in the future.\n*   **Conciseness:** While being comprehensive, avoid unnecessary verbosity.\n\n**Output:** Provide only the upgraded system prompt.",
		"Write the better version of the last user request": "Analyze the conversation and provide a more concise and effective version of the last user request.\n\nConsider the overall context of the conversation and the user's intent to refine their last message.",
		"Write the user message better": "Analyze the conversation and improve the most recent user message.\n\n**Instructions:**\n- **Objective:** Take the user's last message and rewrite it to make it clearer, more concise, and more effective while preserving the original intent.\n- **Key Steps:**\n  1. Identify the core purpose of the user's message.\n  2. Consider the overall conversation context, including previous exchanges.\n  3. Refine the message by eliminating redundancy, improving clarity, and enhancing structure without altering the meaning.\n  4. Ensure the improved version is polite, direct, and aligned with the user's goals.\n- **Output:** Provide only the rewritten user message, without additional explanations.\n- **Example:** If the original user message is: \"Can you tell me more about that thing from earlier, I think it was important but I'm not sure,\" an improved version could be: \"Please elaborate on the key point from our earlier discussion.\""
	},
	"splash": "# Pure Chat LLM\n\nType `>go` at the end of the file to start a chat session.\n\nFor workflow, bind these commands to hotkeys:\n\n- **`Complete chat response`** (Shift + Enter)\n  _Generate reply and continue chat._\n\n- **`Generate title`** (Ctrl + Shift + D)\n  _Create a note or chat title._\n\n- **`Edit selection`** (Ctrl + Shift + S)\n  _Edit selected text._\n\n- **`Analyze conversation`**\n  _Summarize or review chats._\n\n- **`Open hotkeys`**\n  _Customize shortcuts._\n\nStart exploring and enjoy seamless AI conversations!\n"
}